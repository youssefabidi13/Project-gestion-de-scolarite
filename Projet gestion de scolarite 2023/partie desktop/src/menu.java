
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import javax.mail.Address;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import net.proteanit.sql.DbUtils;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.lang.System.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hp
 */
public class menu extends javax.swing.JFrame {

    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        historiq = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        logout = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblClos = new javax.swing.JLabel();
        lblMinimiz = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
   //     rSTableMetro2 = new JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
    //    rSTableMetro3 = new JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        btnaccpt = new javax.swing.JButton();
        btnrefus = new javax.swing.JButton();
        btnaccept = new javax.swing.JButton();
        btnrefuse = new javax.swing.JButton();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(97, 212, 195));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 350, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        historiq.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        historiq.setForeground(new java.awt.Color(255, 255, 255));
        historiq.setText("Historique");
        historiq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                historiqMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                historiqMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                historiqMouseExited(evt);
            }
        });
        jPanel1.add(historiq, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, -1, -1));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 250, 10));

        jPanel4.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 40));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("-Welcome ADMIN-");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        jPanel7.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 350, 40));

        logout.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 255, 255));
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutMouseExited(evt);
            }
        });
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 580, -1, -1));

        jPanel11.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 350, 70));

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Demandes re√ßues");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jPanel12.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 350, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(15, 1, 1, 1, new java.awt.Color(97, 212, 195)));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        
        try{ 	
        	
        	PreparedStatement ps;
            ResultSet rs;
            String query = "SELECT COUNT(*) FROM demandes WHERE status='accepte'";
        	ps = ConnectionDB.getConnnection().prepareStatement(query);

            rs = ps.executeQuery();
            
			  if (rs.next()) {
			    int count = rs.getInt(1);
			  
			    jLabel2.setText(String.valueOf(count));
			  }
		  } catch (SQLException e) {
			            System.out.println("Error: " + e);
		 }

        
        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel2)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 170, 100));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Demande en cours");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 40, -1, -1));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Demande accepte");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Demande refusee");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        lblClos.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblClos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClos.setText("x");
        lblClos.setPreferredSize(new java.awt.Dimension(17, 17));
        lblClos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblClosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblClosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblClosMouseExited(evt);
            }
        });
        jPanel2.add(lblClos, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 0, -1, -1));

        lblMinimiz.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblMinimiz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimiz.setText("-");
        lblMinimiz.setPreferredSize(new java.awt.Dimension(17, 17));
        lblMinimiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblMinimizMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimizMouseExited(evt);
            }
        });
        jPanel2.add(lblMinimiz, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 0, -1, -1));

        jPanel8.setBackground(new java.awt.Color(97, 212, 195));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Convention de stage");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, 340, 40));

        jPanel9.setBorder(javax.swing.BorderFactory.createMatteBorder(15, 1, 1, 1, new java.awt.Color(97, 212, 195)));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        try{ 	
        	
        	PreparedStatement ps;
            ResultSet rs;
            String query = "SELECT COUNT(*) FROM demandes WHERE status='Non traite'";
        	ps = ConnectionDB.getConnnection().prepareStatement(query);

            rs = ps.executeQuery();
            
			  if (rs.next()) {
			    int count = rs.getInt(1);
			  
			    jLabel9.setText(String.valueOf(count));
			  }
		  } catch (SQLException e) {
			            System.out.println("Error: " + e);
		 }

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel9)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel9)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, 170, 100));

        jPanel10.setBorder(javax.swing.BorderFactory.createMatteBorder(15, 1, 1, 1, new java.awt.Color(97, 212, 195)));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        try{ 	
        	
        	PreparedStatement ps;
            ResultSet rs;
            String query = "SELECT COUNT(*) FROM demandes WHERE status='refuse'";
        	ps = ConnectionDB.getConnnection().prepareStatement(query);

            rs = ps.executeQuery();
            
			  if (rs.next()) {
			    int count = rs.getInt(1);
			  
			    jLabel10.setText(String.valueOf(count));
			  }
		  } catch (SQLException e) {
			            System.out.println("Error: " + e);
		 }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel10)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel10)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 170, 100));

        try{ 	
    	List<Object[]> table = new ArrayList<Object[]>();

        PreparedStatement ps;
        ResultSet rs;
        String query = "select demandes.id,etudiants.nom,etudiants.prenom,documents.type_doc,etudiants.apoge,date_demande from demandes,etudiants,documents" +
        		" where demandes.id_etd =etudiants.id and documents.id = demandes.id_docum and"
        		+ " (documents.type_doc ='Attestation de scolarite' or documents.type_doc='Attesstation de reussite' OR documents.type_doc='Releve De Notes' OR documents.type_doc='Demande de stage') and status='Non traite';";
        ps = ConnectionDB.getConnnection().prepareStatement(query);

        rs = ps.executeQuery();


        // Iterate through the ResultSet and store the results in the table
        while (rs.next()) {
            Object[] data = new Object[6];
            data[0] = rs.getString("id");
            data[1] = rs.getString("nom");
            data[2] = rs.getString("prenom");
            data[3] = rs.getString("type_doc");
            data[4] = rs.getString("apoge");
            data[5] = rs.getString("date_demande");

            table.add(data);
        }
        // Cr√©ez un tableau de donn√©es pour le JTable
        String[] columnNames = {"Id de la demande","nom", "prenom", "type_doc", "apoge", "date_demande"};
        Object[][] data = new Object[table.size()][columnNames.length];
        for (int i = 0; i < table.size(); i++) {
            data[i] = table.get(i);
        }
    	

        // Cr√©er un mod√®le de tableau √† partir des donn√©es
        TableModel model = new DefaultTableModel(data, columnNames) {
            public Class getColumnClass(int column) {
                return getValueAt(0, column).getClass();
            }
        };
        rSTableMetro2 = new JTable(model);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,"Connection with DB failed!");
        }
        
       

//        rSTableMetro2.setColorBackgoundHead(new java.awt.Color(97, 212, 195));
//        rSTableMetro2.setColorFilasBackgound2(new java.awt.Color(97, 212, 195));
//        rSTableMetro2.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
//        rSTableMetro2.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
//        rSTableMetro2.setColorSelBackgound(new java.awt.Color(97, 212, 195));
//        rSTableMetro2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
//        rSTableMetro2.setFuenteFilas(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
//        rSTableMetro2.setFuenteFilasSelect(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
//        rSTableMetro2.setFuenteHead(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
//        rSTableMetro2.setRowHeight(40);
        jScrollPane2.setViewportView(rSTableMetro2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 790, 130));

        try{ 	
        	List<Object[]> table = new ArrayList<Object[]>();

            PreparedStatement ps;
            ResultSet rs;
            String query = "select demandes.id,etudiants.nom,etudiants.prenom,documents.type_doc,etudiants.apoge,date_demande,nomEntre,dateDebut,dateFin,TypeDeStage from demandes,etudiants,documents "
            		+ " where demandes.id_etd =etudiants.id and documents.id = demandes.id_docum and "
            		+ " documents.type_doc='Convention de stage' and status='Non traite';";
            ps = ConnectionDB.getConnnection().prepareStatement(query);

            rs = ps.executeQuery();


            // Iterate through the ResultSet and store the results in the table
            while (rs.next()) {
                Object[] data = new Object[10];
                data[0] = rs.getString("id");
                data[1] = rs.getString("nom");
                data[2] = rs.getString("prenom");
                data[3] = rs.getString("type_doc");
                data[4] = rs.getString("apoge");
                data[5] = rs.getString("date_demande");
                data[6] = rs.getString("nomEntre");
                data[7] = rs.getString("dateDebut");
                data[8] = rs.getString("dateFin");
                data[9] = rs.getString("TypeDeStage");
                

                table.add(data);
            }
            // Cr√©ez un tableau de donn√©es pour le JTable
            String[] columnNames = {"id ","nom", "prenom", "type_doc", "apoge", "date_demande","nomEntre","dateDebut","dateFin","TypeDeStage"};
            Object[][] data = new Object[table.size()][columnNames.length];
            for (int i = 0; i < table.size(); i++) {
                data[i] = table.get(i);
            }
        	

            // Cr√©er un mod√®le de tableau √† partir des donn√©es
            TableModel model = new DefaultTableModel(data, columnNames) {
                public Class getColumnClass(int column) {
                    return getValueAt(0, column).getClass();
                }
            };
            rSTableMetro3 = new JTable(model);
	        }catch(Exception ex){
	            JOptionPane.showMessageDialog(null,"Connection with DB failed!");
	        }
//        rSTableMetro3.setColorBackgoundHead(new java.awt.Color(97, 212, 195));
//        rSTableMetro3.setColorFilasBackgound2(new java.awt.Color(97, 212, 195));
//        rSTableMetro3.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
//        rSTableMetro3.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
//        rSTableMetro3.setColorSelBackgound(new java.awt.Color(97, 212, 195));
//        rSTableMetro3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
//        rSTableMetro3.setFuenteFilas(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
//        rSTableMetro3.setFuenteFilasSelect(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
//        rSTableMetro3.setFuenteHead(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        rSTableMetro3.setRowHeight(40);
        jScrollPane3.setViewportView(rSTableMetro3);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 560, 790, 130));

        jPanel13.setBackground(new java.awt.Color(97, 212, 195));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Attestation de r√©ussite, de scolarit√© - relev√©s de notes ");
        jPanel13.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel2.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 340, 40));

        jPanel6.setBackground(new java.awt.Color(97, 212, 195));

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Demandes re√ßues");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel16)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 320, 70));

        btnaccpt.setBackground(new java.awt.Color(97, 212, 195));
        btnaccpt.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnaccpt.setForeground(new java.awt.Color(255, 255, 255));
        btnaccpt.setText("Accepter");
        btnaccpt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnaccptMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnaccptMouseExited(evt);
            }
        	
        });
        
    	rSTableMetro2.addMouseListener(new MouseAdapter() {
        	  @Override
        	  public void mouseClicked(MouseEvent e) {
        		int ligne =rSTableMetro2.getSelectedRow();
	      		int id =Integer.parseInt(rSTableMetro2.getModel().getValueAt(ligne, 0).toString());
	 //     		JOptionPane.showMessageDialog(null, id);
	      		
	      		//      		JOptionPane.showInternalMessageDialog(null, ligne);
	      		      		String typedoc =rSTableMetro2.getModel().getValueAt(ligne, 3).toString();
	      		 //     		JOptionPane.showMessageDialog(null, id);

        		  }
        	  });
        btnaccpt.addActionListener(new java.awt.event.ActionListener() {
 	
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
             //   btnaccptActionPerformed(evt);
        		int ligne =rSTableMetro2.getSelectedRow();
          		
        		//      		JOptionPane.showInternalMessageDialog(null, ligne);
        	        		if(ligne == -1) {
        	        		//	JOptionPane.showInternalMessageDialog(null, "Selectionner une demande");
        	        		}
        	        		else {
        	        			int id =Integer.parseInt(rSTableMetro2.getModel().getValueAt(ligne, 0).toString());
        	        			String typedoc =rSTableMetro2.getModel().getValueAt(ligne, 3).toString();
        	            		String query = "update demandes set status='accepte'  where id="+id;
        	                	
        	            		try{ 	
        	                    	
        	                    	PreparedStatement ps ;
        	                    	
        	                    	
        	                        
        	                    	ps = ConnectionDB.getConnnection().prepareStatement(query);
        	                    	ps.execute();
        	                    	JOptionPane.showMessageDialog(null, "Demande updated");
        	                    	refreshTable();
        	                    	//if (il faut verifier id de document par id de demande)
        	                    	//GeneratePdf.AttestationReussite(id);
        	                    	//GeneratePdf.AttestationScolarite(id);
        	                    	if(typedoc.equalsIgnoreCase("attesstation de reussite")) {
        	                    		GeneratePdf.AttestationReussite(id);
        	                    	}else if(typedoc.equalsIgnoreCase("attestation de scolarite")) {
        	                    		GeneratePdf.AttestationScolarite(id);
        	                    	}else if(typedoc.equalsIgnoreCase("releve de notes")) {
        	                    		GeneratePdf.ReleveNote(id);
        	                    	}else {
        	                    		GeneratePdf.DemandeStage(id);
        	                    	}
        	                    	JOptionPane.showMessageDialog(null, "Email Sended");

        	            		  } catch (SQLException ex) {
        	            			            System.out.println("Error: " + ex);
        	            		  } catch (Exception e) {
        							// TODO Auto-generated catch block
        							e.printStackTrace();
        						}
        	    				
        	        		}
            }
        });
        btnrefus.addActionListener(new java.awt.event.ActionListener() {
         	
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		int ligne =rSTableMetro2.getSelectedRow();
          		
        		//      		JOptionPane.showInternalMessageDialog(null, ligne);
        	        		if(ligne == -1) {
        	        		//	JOptionPane.showInternalMessageDialog(null, "Selectionner une demande");
        	        		}
        	        		else {
        	        			int id =Integer.parseInt(rSTableMetro2.getModel().getValueAt(ligne, 0).toString());
        	            		String query = "update demandes set status='refuse'  where id="+id;
        	                	
        	            		try{ 	
        	                    	
        	                    	PreparedStatement ps ;
        	                    	
        	                    	
        	                        
        	                    	ps = ConnectionDB.getConnnection().prepareStatement(query);
        	                    	ps.execute();
        	                    	JOptionPane.showMessageDialog(null, "Demande updated");
        	                    	refreshTable();
        	                    	SendEmail.refuse(id);;
        	                    	JOptionPane.showMessageDialog(null, "Email Sended");

        	            		  } catch (SQLException ex) {
        	            			            System.out.println("Error: " + ex);
        	            		  } catch (Exception e) {
        							// TODO Auto-generated catch block
        							e.printStackTrace();
        						}
        	    				
        	        		}
            }
        });
        
        rSTableMetro3.addMouseListener(new MouseAdapter() {
      	  @Override
      	  public void mouseClicked(MouseEvent e) {
      		int ligne =rSTableMetro3.getSelectedRow();
    		
	//      		JOptionPane.showInternalMessageDialog(null, ligne);
	      		int id =Integer.parseInt(rSTableMetro3.getModel().getValueAt(ligne, 0).toString());
	 //     		JOptionPane.showMessageDialog(null, id);

      		  }
      	  });
        
        btnaccept.addActionListener(new java.awt.event.ActionListener() {
         	
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		 //   btnaccptActionPerformed(evt);
        		int ligne =rSTableMetro3.getSelectedRow();
          		
        		//      		JOptionPane.showInternalMessageDialog(null, ligne);
        	        		if(ligne == -1) {
        	        		//	JOptionPane.showInternalMessageDialog(null, "Selectionner une demande");
        	        		}
        	        		else {
        	        			int id =Integer.parseInt(rSTableMetro3.getModel().getValueAt(ligne, 0).toString());
        	            		String query = "update demandes set status='accepte'  where id="+id;
        	                	
        	            		try{ 	
        	                    	
        	                    	PreparedStatement ps ;
        	                    	
        	                    	
        	                        
        	                    	ps = ConnectionDB.getConnnection().prepareStatement(query);
        	                    	ps.execute();
        	                    	JOptionPane.showMessageDialog(null, "Demande updated");
        	                    	refreshTableC();
        	                    	GeneratePdf.ConventionStage(id);
        	                    	JOptionPane.showMessageDialog(null, "Email Sended");

        	            		  } catch (SQLException ex) {
        	            			            System.out.println("Error: " + ex);
        	            		  } catch (Exception e) {
        							// TODO Auto-generated catch block
        							e.printStackTrace();
        						}
        	    				
        	     }
            }
        });
        btnrefuse.addActionListener(new java.awt.event.ActionListener() {
         	
        	public void actionPerformed(java.awt.event.ActionEvent evt) {
        		int ligne =rSTableMetro3.getSelectedRow();
          		
        		//      		JOptionPane.showInternalMessageDialog(null, ligne);
        	        		if(ligne == -1) {
        	        		//	JOptionPane.showInternalMessageDialog(null, "Selectionner une demande");
        	        		}
        	        		else {
        	        			int id =Integer.parseInt(rSTableMetro3.getModel().getValueAt(ligne, 0).toString());
        	            		String query = "update demandes set status='refuse'  where id="+id;
        	                	
        	            		try{ 	
        	                    	
        	                    	PreparedStatement ps ;
        	                    	
        	                    	
        	                        
        	                    	ps = ConnectionDB.getConnnection().prepareStatement(query);
        	                    	ps.execute();
        	                    	JOptionPane.showMessageDialog(null, "Demande updated");
        	                    	refreshTableC();
        	                    	SendEmail.refuse(id);;
        	                    	JOptionPane.showMessageDialog(null, "Email Sended");

        	            		  } catch (SQLException ex) {
        	            			            System.out.println("Error: " + ex);
        	            		  } catch (Exception e) {
        							// TODO Auto-generated catch block
        							e.printStackTrace();
        						}
        	    				
        	       }
            }
        });
        

        jPanel2.add(btnaccpt, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, 110, 40));

        btnrefus.setBackground(new java.awt.Color(97, 212, 195));
        btnrefus.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnrefus.setForeground(new java.awt.Color(255, 255, 255));
        btnrefus.setText("Refuser");
        btnrefus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnrefusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnrefusMouseExited(evt);
            }
        });
        btnrefus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefusActionPerformed(evt);
            }
        });
        jPanel2.add(btnrefus, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 290, 110, 40));

        btnaccept.setBackground(new java.awt.Color(97, 212, 195));
        btnaccept.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnaccept.setForeground(new java.awt.Color(255, 255, 255));
        btnaccept.setText("Accepter");
        btnaccept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnacceptMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnacceptMouseExited(evt);
            }
        });
        btnaccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnacceptActionPerformed(evt);
            }
        });
        jPanel2.add(btnaccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 510, 110, 40));

        btnrefuse.setBackground(new java.awt.Color(97, 212, 195));
        btnrefuse.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnrefuse.setForeground(new java.awt.Color(255, 255, 255));
        btnrefuse.setText("Refuser");
        btnrefuse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnrefuseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnrefuseMouseExited(evt);
            }
        });
        btnrefuse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefuseActionPerformed(evt);
            }
        });
        jPanel2.add(btnrefuse, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 510, 110, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 870, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void refreshTable(){
    	  try{ 	
    	      PreparedStatement ps;
    	      ResultSet rs;
    	      String query = "select demandes.id,etudiants.nom,etudiants.prenom,documents.type_doc,etudiants.apoge,date_demande from demandes,etudiants,documents" +
    	        		" where demandes.id_etd =etudiants.id and documents.id = demandes.id_docum and"
    	        		+ " (documents.type_doc ='Attestation de scolarite' or documents.type_doc='Attesstation de reussite' OR documents.type_doc='Releve De Notes' or documents.type_doc='Demande de stage') "
    	        		+ " and status='Non traite';";
    	      ps = ConnectionDB.getConnnection().prepareStatement(query);
    	      rs = ps.executeQuery();
    	      rSTableMetro2.setModel(DbUtils.resultSetToTableModel(rs));
    	      }catch(Exception ex){
    	          JOptionPane.showMessageDialog(null,"Connection with DB failed!");
    	      }
    	}
    
    public void refreshTableC(){
  	  try{ 	
  	      PreparedStatement ps;
  	      ResultSet rs;
  	      String query ="select demandes.id,etudiants.nom,etudiants.prenom,documents.type_doc,etudiants.apoge,date_demande,nomEntre,dateDebut,dateFin,TypeDeStage from demandes,etudiants,documents "
          		+ " where demandes.id_etd =etudiants.apoge and documents.id = demandes.id_docum and "
          		+ " documents.type_doc='Convention de Stage' and status='Non traite';" ;
  	      ps = ConnectionDB.getConnnection().prepareStatement(query);
  	      rs = ps.executeQuery();
  	      rSTableMetro3.setModel(DbUtils.resultSetToTableModel(rs));
  	      }catch(Exception ex){
  	          JOptionPane.showMessageDialog(null,"Connection with DB failed!");
  	      }
  	}
    
    
    private void lblClosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClosMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblClosMouseClicked

    private void lblClosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClosMouseEntered
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(140,50,50));
        lblClos.setBorder(borderLabel);
        lblClos.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_lblClosMouseEntered

    private void lblClosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClosMouseExited
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204,204,204));
        lblClos.setBorder(borderLabel);
        lblClos.setForeground(new Color(204,204,204));
    }//GEN-LAST:event_lblClosMouseExited

    private void lblMinimizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_lblMinimizMouseClicked

    private void lblMinimizMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizMouseEntered
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(140,50,50));
        lblMinimiz.setBorder(borderLabel);
        lblMinimiz.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_lblMinimizMouseEntered

    private void lblMinimizMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizMouseExited
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204,204,204));
        lblMinimiz.setBorder(borderLabel);
        lblMinimiz.setForeground(new Color(204,204,204));
    }//GEN-LAST:event_lblMinimizMouseExited

    private void historiqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historiqMouseClicked
        // TODO add your handling code here:
        menuu historique = new menuu();
        historique.setVisible(true);
        historique.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_historiqMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
        signin logout = new signin();
        logout.setVisible(true);
        logout.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void historiqMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historiqMouseEntered
        // TODO add your handling code here:
        historiq.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_historiqMouseEntered

    private void historiqMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historiqMouseExited
        // TODO add your handling code here:
        historiq.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_historiqMouseExited

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
         logout.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_logoutMouseEntered

    private void logoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseExited
        // TODO add your handling code here:
        logout.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_logoutMouseExited

    private void btnaccptMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnaccptMouseEntered
        // TODO add your handling code here:
        btnaccpt.setBackground(new Color(107, 166, 68));
    }//GEN-LAST:event_btnaccptMouseEntered

    private void btnaccptMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnaccptMouseExited
        // TODO add your handling code here:
        btnaccpt.setBackground(new Color(97,212,195));
    }//GEN-LAST:event_btnaccptMouseExited

    private void btnaccptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaccptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnaccptActionPerformed

    private void btnrefusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrefusMouseEntered
        // TODO add your handling code here:
        btnrefus.setBackground(new Color(140,50,50));
    }//GEN-LAST:event_btnrefusMouseEntered

    private void btnrefusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrefusMouseExited
        // TODO add your handling code here:
        btnrefus.setBackground(new Color(97,212,195));
    }//GEN-LAST:event_btnrefusMouseExited

    private void btnrefusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnrefusActionPerformed

    private void btnacceptMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnacceptMouseEntered
        // TODO add your handling code here:
        btnaccept.setBackground(new Color(107, 166, 68));
    }//GEN-LAST:event_btnacceptMouseEntered

    private void btnacceptMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnacceptMouseExited
        // TODO add your handling code here:
        btnaccept.setBackground(new Color(97,212,195));
    }//GEN-LAST:event_btnacceptMouseExited

    private void btnacceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnacceptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnacceptActionPerformed

    private void btnrefuseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrefuseMouseEntered
        btnrefuse.setBackground(new Color(140,50,50));
    }//GEN-LAST:event_btnrefuseMouseEntered

    private void btnrefuseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrefuseMouseExited
        btnrefuse.setBackground(new Color(97,212,195));
    }//GEN-LAST:event_btnrefuseMouseExited

    private void btnrefuseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefuseActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnrefuseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                menu menu = new menu();
               menu.setVisible(true);
               menu.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaccept;
    private javax.swing.JButton btnaccpt;
    private javax.swing.JButton btnrefus;
    private javax.swing.JButton btnrefuse;
    private javax.swing.JLabel historiq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblClos;
    private javax.swing.JLabel lblMinimiz;
    private javax.swing.JLabel logout;
    private JTable rSTableMetro2;
    private JTable rSTableMetro3;
    // End of variables declaration//GEN-END:variables
}
