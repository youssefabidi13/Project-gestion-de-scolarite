
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.border.Border;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author hp
 */
public class menuu extends javax.swing.JFrame {

    /**
     * Creates new form menuu
     */
    public menuu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        txtsearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lgout = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        dmd = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblMinimz = new javax.swing.JLabel();
        lblCls = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        telecharger=new JButton();
        renvoyer=new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(97, 212, 195));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 350, 40));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Historique");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, -1, -1));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 250, 10));

        jPanel4.setBackground(new java.awt.Color(36, 47, 65));

        txtsearch.setFont(new java.awt.Font("Century Gothic", 2, 14)); // NOI18N
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/4.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 80));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("-Welcome ADMIN-");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));

        jPanel7.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 350, 40));

        lgout.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lgout.setForeground(new java.awt.Color(255, 255, 255));
        lgout.setText("Logout");
        lgout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lgoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lgoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lgoutMouseExited(evt);
            }
        });
        jPanel1.add(lgout, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 580, -1, -1));

        jPanel11.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 350, 60));

        dmd.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        dmd.setForeground(new java.awt.Color(255, 255, 255));
        dmd.setText("Demandes re√ßues");
        dmd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dmdMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dmdMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dmdMouseExited(evt);
            }
        });
        jPanel1.add(dmd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jPanel12.setBackground(new java.awt.Color(36, 47, 65));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 350, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/2.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 660));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBackground(new java.awt.Color(97, 212, 195));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("L'historique des demandes ");
        jPanel13.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        jPanel2.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 340, 40));
        telecharger.setBackground(new java.awt.Color(97, 212, 195));
        telecharger.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        telecharger.setForeground(new java.awt.Color(255, 255, 255));
        telecharger.setText("Telecharger");
        telecharger.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
            	telechargerMouseEntered(evt);
            }
            private void telechargerMouseEntered(MouseEvent evt) {
				// TODO Auto-generated method stub
				
			}
			public void mouseExited(java.awt.event.MouseEvent evt) {
				telechargerMouseExited(evt);
            }
			private void telechargerMouseExited(MouseEvent evt) {
				// TODO Auto-generated method stub
				
			}
        	
        });
        renvoyer.setBackground(new java.awt.Color(97, 212, 195));
        renvoyer.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        renvoyer.setForeground(new java.awt.Color(255, 255, 255));
        renvoyer.setText("Renvoyer");
        renvoyer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
            	telechargerMouseEntered(evt);
            }
            private void telechargerMouseEntered(MouseEvent evt) {
				// TODO Auto-generated method stub
				
			}
			public void mouseExited(java.awt.event.MouseEvent evt) {
				telechargerMouseExited(evt);
            }
			private void telechargerMouseExited(MouseEvent evt) {
				// TODO Auto-generated method stub
				
			}
        	
        });
        
        jPanel2.add(telecharger, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 110, 40));
        jPanel2.add(renvoyer, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 110, 40));

        try{ 	
        	List<Object[]> table = new ArrayList<Object[]>();

            PreparedStatement ps;
            ResultSet rs;
            String query = "select demandes.id,demandes.status,etudiants.nom,etudiants.prenom,documents.type_doc,etudiants.apoge,date_demande from demandes,etudiants,documents "
            		+ " where demandes.id_etd =etudiants.id and documents.id = demandes.id_docum and (status='accepte' or status='refuse');";
            ps = ConnectionDB.getConnnection().prepareStatement(query);

            rs = ps.executeQuery();

            // Iterate through the ResultSet and store the results in the table
            while (rs.next()) {
                Object[] data = new Object[7];
                data[0] = rs.getString("id");
                data[1] = rs.getString("status");
                data[2] = rs.getString("nom");
                data[3] = rs.getString("prenom");
                data[4] = rs.getString("type_doc");
                data[5] = rs.getString("apoge");
                data[6] = rs.getString("date_demande");

                table.add(data);
            }
            // Cr√©ez un tableau de donn√©es pour le JTable
            String[] columnNames = {"Id Demande","Status","Nom", "Prenom", "Type de document", "Appoge", "Date de demande"};
            Object[][] data = new Object[table.size()][columnNames.length];
            for (int i = 0; i < table.size(); i++) {
                data[i] = table.get(i);
            }

            // Cr√©er un mod√®le de tableau √† partir des donn√©es
            TableModel model = new DefaultTableModel(data, columnNames) {
                public Class getColumnClass(int column) {
                    return getValueAt(0, column).getClass();
                }
            };
                rSTableMetro3 = new JTable(model);
            // Mettre en place le filtre
            TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
            rSTableMetro3.setRowSorter(sorter);
            RowFilter<TableModel, Object> rf = null;
            txtsearch.getDocument().addDocumentListener(new DocumentListener() {

                public void changedUpdate(DocumentEvent e) {
                    String text = txtsearch.getText();
                    if (text.trim().length() == 0) {
                        sorter.setRowFilter(null);
                    } else {
                        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }

                public void removeUpdate(DocumentEvent e) {
                    String text = txtsearch.getText();
                    if (text.trim().length() == 0) {
                        sorter.setRowFilter(null);
                    } else {
                        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }

                public void insertUpdate(DocumentEvent e) {
                    String text = txtsearch.getText();
                    if (text.trim().length() == 0) {
                        sorter.setRowFilter(null);
                    } else {
                        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                    }
                }
             });
        } catch (SQLException e) {
            // Handle errors
        }
//        rSTableMetro3.setColorBackgoundHead(new java.awt.Color(97, 212, 195));
//        rSTableMetro3.setColorFilasBackgound2(new java.awt.Color(97, 212, 195));
//        rSTableMetro3.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
//        rSTableMetro3.setColorFilasForeground2(new java.awt.Color(255, 255, 255));
//        rSTableMetro3.setColorSelBackgound(new java.awt.Color(97, 212, 195));
//        rSTableMetro3.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
//        rSTableMetro3.setFuenteFilas(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
//        rSTableMetro3.setFuenteFilasSelect(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
//        rSTableMetro3.setFuenteHead(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        rSTableMetro3.setRowHeight(40);
        jScrollPane3.setViewportView(rSTableMetro3);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 790, 410));
        rSTableMetro3.addMouseListener(new MouseAdapter() {
        	@Override
        	public void mouseClicked(MouseEvent e) {
        		int ligne =rSTableMetro3.getSelectedRow();
        		      		int id =Integer.parseInt(rSTableMetro3.getModel().getValueAt(ligne, 0).toString());
    	        			String typedoc =rSTableMetro3.getModel().getValueAt(ligne, 4).toString();

        		
        	}
        });
        telecharger.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		int ligne =rSTableMetro3.getSelectedRow();
          		
        		     	//	JOptionPane.showInternalMessageDialog(null, ligne);
        	        		if(ligne == -1) {
        	        		//	JOptionPane.showInternalMessageDialog(null, "Selectionner une demande");
        	        		}
        	        		else {
        	        			int id =Integer.parseInt(rSTableMetro3.getModel().getValueAt(ligne, 0).toString());
        	        			String typedoc =rSTableMetro3.getModel().getValueAt(ligne, 4).toString();

        	                    try {
        	                    	if(typedoc.equalsIgnoreCase("attesstation de reussite")) {
        	                    		TelechargerPdf.AttestationReussite(id);
        	                    	}else if(typedoc.equalsIgnoreCase("attestation de scolarite")) {
        	                    		TelechargerPdf.AttestationScolarite(id);
        	                    	}else if(typedoc.equalsIgnoreCase("releve de notes")) {
        	                    		TelechargerPdf.ReleveNote(id);
        	                    	}else if(typedoc.equalsIgnoreCase("demande de stage")) {
        	                    		TelechargerPdf.DemandeStage(id);
        	                    	}else {
        	                    		TelechargerPdf.ConventionStage(id);
        	                    	}
        	                    	
								} catch (Exception e1) {
									System.out.println(e1.getMessage());
								}
        	                    JOptionPane.showMessageDialog(null, "Pdf Generated");

        	            	}
        	}
        });
        
        renvoyer.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		int ligne =rSTableMetro3.getSelectedRow();
          		
        		     	//	JOptionPane.showInternalMessageDialog(null, ligne);
        	        		if(ligne == -1) {
        	        		//	JOptionPane.showInternalMessageDialog(null, "Selectionner une demande");
        	        		}
        	        		else {
        	        			int id =Integer.parseInt(rSTableMetro3.getModel().getValueAt(ligne, 0).toString());
        	        			String typedoc =rSTableMetro3.getModel().getValueAt(ligne, 4).toString();

        	                    try {
        	                    	if(typedoc.equalsIgnoreCase("attesstation de reussite")) {
        	                    		GeneratePdf.AttestationReussite(id);
        	                    	}else if(typedoc.equalsIgnoreCase("attestation de scolarite")) {
        	                    		GeneratePdf.AttestationScolarite(id);
        	                    	}else if(typedoc.equalsIgnoreCase("releve de notes")) {
        	                    		GeneratePdf.ReleveNote(id);
        	                    	}else if(typedoc.equalsIgnoreCase("demande de stage")) {
        	                    		GeneratePdf.DemandeStage(id);
        	                    	}else {
        	                    		GeneratePdf.ConventionStage(id);
        	                    	}
								} catch (Exception e1) {
									System.out.println(e1.getMessage());
								}
        	            	}
        	}
        });

        
        lblMinimz.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblMinimz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimz.setText("-");
        lblMinimz.setPreferredSize(new java.awt.Dimension(17, 17));
        lblMinimz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimzMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblMinimzMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimzMouseExited(evt);
            }
        });
        jPanel2.add(lblMinimz, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, -1, -1));

        lblCls.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblCls.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCls.setText("x");
        lblCls.setPreferredSize(new java.awt.Dimension(17, 17));
        lblCls.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblClsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblClsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblClsMouseExited(evt);
            }
        });
        jPanel2.add(lblCls, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, -1));

        jPanel6.setBackground(new java.awt.Color(97, 212, 195));

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Historiques");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 320, 70));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 870, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblMinimzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimzMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_lblMinimzMouseClicked

    private void lblMinimzMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimzMouseEntered
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(140,50,50));
        lblMinimz.setBorder(borderLabel);
        lblMinimz.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_lblMinimzMouseEntered

    private void lblMinimzMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimzMouseExited
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204,204,204));
        lblMinimz.setBorder(borderLabel);
        lblMinimz.setForeground(new Color(204,204,204));
    }//GEN-LAST:event_lblMinimzMouseExited

    private void lblClsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClsMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblClsMouseClicked

    private void lblClsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClsMouseEntered
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(140,50,50));
        lblCls.setBorder(borderLabel);
        lblCls.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_lblClsMouseEntered

    private void lblClsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblClsMouseExited
        Border borderLabel = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(204,204,204));
        lblCls.setBorder(borderLabel);
        lblCls.setForeground(new Color(204,204,204));
    }//GEN-LAST:event_lblClsMouseExited

    private void dmdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dmdMouseClicked
        // TODO add your handling code here:
        menu demande = new menu();
        demande.setVisible(true);
        demande.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_dmdMouseClicked

    private void lgoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lgoutMouseClicked
        // TODO add your handling code here:
        signin logoutt = new signin();
        logoutt.setVisible(true);
        logoutt.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_lgoutMouseClicked

    private void dmdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dmdMouseEntered
        // TODO add your handling code here:
        dmd.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_dmdMouseEntered

    private void dmdMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dmdMouseExited
        // TODO add your handling code here:
        dmd.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_dmdMouseExited

    private void lgoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lgoutMouseEntered
        // TODO add your handling code here:
        lgout.setForeground(new Color(140,50,50));
    }//GEN-LAST:event_lgoutMouseEntered

    private void lgoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lgoutMouseExited
        // TODO add your handling code here:
        lgout.setForeground(new Color(255,255,255));
    }//GEN-LAST:event_lgoutMouseExited

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                menuu menuu = new menuu();
               menuu.setVisible(true);
               menuu.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dmd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblCls;
    private javax.swing.JLabel lblMinimz;
    private javax.swing.JLabel lgout;
    private JTable rSTableMetro3;
    private javax.swing.JTextField txtsearch;
    private JButton telecharger;
    private JButton renvoyer;
    // End of variables declaration//GEN-END:variables
}
